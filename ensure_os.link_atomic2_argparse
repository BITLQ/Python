import socket
import struct
import os
import time
import argparse
GROUP_IP = '224.3.29.71'


def __Client__(local_path, dest_path):
    server_addr = ('', 10000)
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.bind(server_addr)
    addgroup = socket.inet_aton(GROUP_IP)
    mreq = struct.pack('4sL', addgroup, socket.INADDR_ANY)
    sock.setsockopt(socket.IPPROTO_IP, socket.IP_ADD_MEMBERSHIP, mreq)

    try:
        while True:
            data, addr = sock.recvfrom(1024)
            try:
                print "do os.link"
                os.link(local_path, dest_path)
            except:
                sock.sendto("False", addr)
            else:
                sock.sendto("True", addr)
    except:
        sock.close()


def __Server__(dest_path, num):
    group = (GROUP_IP, 10000)
    ADDR = ('', 10000)
    num = int(num)
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.bind(ADDR)
    ttl = struct.pack('b', 1)
    sock.setsockopt(socket.IPPROTO_IP, socket.IP_MULTICAST_TTL, ttl)

    try:
        while num:
            sock.sendto("1", group)
            count = 0
            while True:
                data, addr = sock.recvfrom(16)
                print data
                print addr
                count = count + 1
                if (count == 2):
                    break
            if os.path.exists(dest_path):
                os.unlink(dest_path)
                print "unlink"
            num = num - 1
            time.sleep(2)
    except:
        print "close is running"
        sock.close()


def __Main__():
    parser = argparse.ArgumentParser()
    parser.add_argument("CS", help="mothod select")
    parser.add_argument("mount_srcpath", help="nfs export")
    parser.add_argument("mount_destpath", help="the mount point")
    parser.add_argument("srcfilename", help="os_link_srcfilename")
    parser.add_argument("destfilename", help="os_link_destfilename")
    parser.add_argument("times", help="test times", type=int)

    args = parser.parse_args()
    os.system("mount.nfs -o noatime,nodiratime,nolock %s %s" \
              % (args.mount_srcpath, args.mount_destpath))
    if args.CS == "S":
        __Server__(args.destfilename, args.times)
    elif args.CS == "C":
        __Client__(args.srcfilename, args.destfilename)
    else:
        print args.CS

if __name__ == '__main__':
    __Main__()
